/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // docker plugin
    id 'com.bmuschko.docker-java-application' version '7.3.0'
}

import static com.bmuschko.gradle.docker.tasks.image.Dockerfile.*

repositories {

    // The Idea Consult repository has old versions of CDK that are not in Maven Central
    maven {
        url "https://nexus.ideaconsult.net/content/repositories/thirdparty"
    }

    // Use Maven Central for resolving dependencies.
    mavenCentral()

}

dependencies {

    implementation 'commons-cli:commons-cli:1.5.0'

    // do not upgrade - this is the version that SMARTCyp uses so we should stick with it.
    def cdkSmartCypVersion = '1.4.8'
    implementation "org.openscience.cdk:cdk-core:$cdkSmartCypVersion"
    implementation "org.openscience.cdk:cdk-standard:$cdkSmartCypVersion"
    implementation "org.openscience.cdk:cdk-io:$cdkSmartCypVersion"
    implementation "org.openscience.cdk:cdk-ioformats:$cdkSmartCypVersion"
    implementation "org.openscience.cdk:cdk-nonotify:$cdkSmartCypVersion"
    implementation "org.openscience.cdk:cdk-smiles:$cdkSmartCypVersion"
    implementation("org.openscience.cdk:cdk-smarts:$cdkSmartCypVersion") {
        // excluded a dependencies are not correctly defined and this is not found
        exclude group:'jama',module:'jama'
    }
    implementation "org.openscience.cdk:cdk-valencycheck:$cdkSmartCypVersion"
    implementation("org.openscience.cdk:cdk-extra:$cdkSmartCypVersion")  {
        exclude group:'jama',module:'jama'
    }

    implementation group: 'com.opencsv', name: 'opencsv', version: '5.6'

    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.10'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

application {
    // Define the main class for the application.
    // this can be set as a commandline option e.g.
    // ./gradlew run --args="--help" -PmainClass=squonk.jobs.smartcyp.Predictor
    //  ./gradlew run --args="-i ../data/dhfr_3d.sdf -a" -PmainClass=squonk.jobs.smartcyp.Predictor
    mainClass = project.hasProperty("mainClass") ? project.getProperty("mainClass") : 'squonk.jobs.smartcyp.Predictor'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

docker {
    javaApplication {
        baseImage = 'openjdk:11-jre-slim'
        maintainer = 'Tim Dudgeon "tdudgeon@informaticsmatters.com"'
        ports = []
        images = ['informaticsmatters/squonk2-smartcyp:latest']
        mainClassName = 'squonk.jobs.smartcyp.Predictor'
    }
}

// This modifies the Dockerfile that is build by the docker-java-application plugin.
// The ENTRYPOINT is replaced with 'java' and the classpath arguments
// A CMD added that is '-version'.
// The expectation is that the CMD will be overridden at runtime.
dockerCreateDockerfile {
    List<Instruction> originalInstructions = new ArrayList<Instruction>(instructions.get())
    int entrypointIndex = originalInstructions
            .findIndexOf { it.keyword == EntryPointInstruction.KEYWORD}
    originalInstructions.remove(entrypointIndex)
    originalInstructions.add(new DefaultCommandInstruction("java -version"))
    originalInstructions.add(new EnvironmentVariableInstruction("CLASSPATH", "/app/resources:/app/classes:/app/libs/*"))

    instructions.set(originalInstructions)
}
